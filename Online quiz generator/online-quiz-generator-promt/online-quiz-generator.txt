Objetivo del Proyecto:
Desarrollar una aplicación web de generador de quizzes interactiva, exclusivamente con HTML, CSS y JavaScript, para servir como una demostración frontend. La aplicación debe simular la persistencia de datos usando localStorage del navegador.

Roles de Usuario:
La aplicación se dividirá en dos roles principales:

Administrador:

Tendrá acceso a todas las funcionalidades de la aplicación.

Podrá crear nuevos quizzes (título, preguntas, opciones, respuesta correcta).

Podrá gestionar quizzes existentes (ver una lista, editar detalles, eliminar).

Podrá visualizar los resultados (puntuaciones de usuarios) de todos los quizzes.

Usuario:

Solo tendrá acceso a la sección de quizzes disponibles para responder.

Podrá seleccionar un quiz de una lista.

Podrá responder las preguntas del quiz seleccionado.

Recibirá una puntuación final al completar el quiz.

Podrá enviar su nombre de usuario y puntuación para ser almacenados.

Funcionalidades Clave:

Página de Entrada (index.html):

Página inicial que permitirá al usuario elegir (o "simular el login") si entra como "Administrador" o como "Usuario".

Para la demo, se puede usar un campo de contraseña simple para el administrador (ej., admin123). Cualquier otra entrada o la selección de "Usuario" redirigirá al modo usuario.

Gestión de Datos (js/data-manager.js):

Centralizará las funciones para interactuar con localStorage.

Funciones para guardar y cargar quizzes (estructura: id, title, questions [cada pregunta con type, text, options, correctAnswer]).

Funciones para guardar y cargar resultados de usuarios (estructura: quizId, username, score, date).

Interfaz de Administrador (admin.html & js/admin.js):

HTML: Formulario para la creación de quizzes con campos dinámicos para añadir múltiples preguntas y sus opciones/respuestas correctas. Sección para listar, editar y eliminar quizzes. Sección para mostrar una tabla de resultados de usuarios.

JavaScript: Lógica para añadir y gestionar preguntas en el formulario. Procesamiento del formulario para guardar quizzes en localStorage. Funcionalidad de edición y eliminación. Carga y visualización de resultados de quizzes.

Interfaz de Usuario (user.html & js/user.js):

HTML: Listado de quizzes disponibles. Área para mostrar las preguntas del quiz actual. Formulario para ingresar el nombre de usuario y botón para enviar puntuación. Área para mostrar la puntuación final.

JavaScript: Carga y muestra los quizzes disponibles desde localStorage. Lógica para presentar las preguntas del quiz (idealmente una por una o en bloques claros). Cálcula la puntuación del usuario. Guarda el resultado final (nombre, puntuación, quizId) en localStorage.

Estilos (css/style.css):

Diseño limpio, intuitivo y responsivo para ambas interfaces (administrador y usuario).

Clara diferenciación visual entre secciones y elementos interactivos.

Estructura de Archivos Propuesta:

your-quiz-project/
├── index.html
├── admin.html
├── user.html
├── css/
│   └── style.css
├── js/
│   ├── app.js             # Lógica general (redirección inicial)
│   ├── admin.js
│   ├── user.js
│   └── data-manager.js
└── assets/                # (Opcional) Imágenes, iconos, etc.
Consideraciones y Puntos a Recordar:

Persistencia Local: Los datos residirán en localStorage del navegador, lo que significa que solo persistirán para ese navegador específico y no serán compartidos entre diferentes usuarios o dispositivos. Esto es aceptable para una demostración frontend.

Sin Backend: Toda la lógica de la aplicación se ejecutará en el cliente. No se utilizarán servidores, bases de datos reales ni APIs externas.

Seguridad (Demo): La "autenticación" y la gestión de datos no serán seguras; son puramente para fines demostrativos de funcionalidad frontend.

Simplicidad Inicial: Comienza con tipos de preguntas simples (ej., opción múltiple) y expande si el tiempo lo permite.

Interfaz de Usuario (UX): Prioriza una experiencia de usuario clara y fácil de usar, tanto para crear como para responder quizzes.